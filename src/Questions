1) Functional Smooothies Inc. is releasing a new smoothie machine that will make the best icy fruit beverages of all time. According to Wikipedia:
   A smoothie (occasionally spelled smoothee or smoothy) is a thick, cold beverage made from pureed raw fruit blended with ice cream or frozen yogurt along with other ingredients such as crushed ice, fruit juice, sweeteners, dairy products, nuts, seeds, etc.
   In order to sell the machine to smoothie vendors all over the world, Functional Smooothies needs to ensure that the machine takes all dietary preferences and allergies into account. They have hired you to write the software for the machine.
   The software has a menu of standard smoothie options, including the ingredients for each drink. When a customer places their order, they supply a list of zero or more dietary restrictions that must be honoured. Your software will print out a list of the ingredients that the smoothie operator needs to put into the machine.
   Menu
   The menu options, along with the ingredients needed for each are as follows.
   • Classic: strawberry, banana, pineapple, mango, peach, honey
   • Freezie: blackberry, blueberry, black currant, grape juice, frozen yogurt
   • Greenie: green apple, lime, avocado, spinach, ice, apple juice Just Desserts: banana, ice cream, chocolate, peanut, cherry

   Input
   You should write a function called ingredients, which takes as input a string containing item from the menu and optionally one or more ingredients to omit from the smoothie, separated by commas.
   Restricted ingredients have to be preceded by sign, as opposed to the ones that should be added. Note that:
   • It is valid to have the allergens not present in the ordered smoothie. Those ingredients will just be ignored and no exception should be thrown.
   • As adding new ingredients is not supported yet, any input with additional ingredients is considered invalid and an IllegalArgumentException should be thrown.
   In very rare cases of the user input processor mechanical failures, their order might be lost or arrive empty to the software.
   Output
   The function should return a string listing the ingredients that the operator needs to put in. To make it more convenient for the operator, the ingredients should be listed in alphabetical order and separated by commas in the string returned from the function.
   A smoothie with no ingredients is represented as "". In case of input being invalid, an IllegalArgumentException should be thrown.

   Examples
   if a customer orders a Classic but is allergic to strawberry and peanuts, your function will be called with the argument "Classic,-strawberry, -peanut" and should return "banana, honey, mango, peach, pineapple". Note that peanut was ignored as it is not a part of the Classic menu.
   • Requesting Classic with additional mango "Classic,mango" should result in IllegalArgumentException being thrown.
   • Same result should apply for requesting a smoothie that is not present in the menu "Vitamin smoothie"

Solution : SmoothieMachine.java

2) You are provided with a list of transactions representing consumers' purchases.
   Each transaction can be either approved or rejected based on total sum of approved purchases the consumer made so far. Specifically the transaction is rejected if total sum of purchases would increase above a certain number - creditlimit. Otherwise the transaction is approved.
   Your task is to process the list of transactions and return list of the rejected ones.
   Input
   You should write a function called findRejectedTransactions, which takes as input a list
   of transactions to process and a creditlimit integer.
   List<String> find RejectedTransactions (List<String> transactions, int creditlimit);
   Transactions are provided in a CSV format. An example transaction may look this:
   "John, Doe, john@doe.com, 30, TR000"
   Each transaction contains consumer details as well as an amount and an id:
   • first name
   • last name
   • email
   • amount
   transaction id
   You should expect all the transactions being valid and containing all of the information listed above.
   Additionally there is a creditlimit >= 0 defined that is equal to all the consumers.
   Output
   The function should return a list of Strings listing the transactions that supposed to be rejected
   if the transactions were to be processed in a sequential manner following the initial order of elements.
   A consumer is uniquely identified by all three of first name, last name and email
   i.e. two persons with equal names but different emails have separate credit line.
   Examples
   findRejectedTransactions([], 0) returns empty list []
   findRejectedTransactions(["John, Doe, john@doe.com, 200, TR0001"], 200) returns empty list [] -the only John Doe's transaction is approved
   findRejectedTransactions(["Jane,Doe, jane@doe.com, 201, TR0001"], 200) returns [TR0001] - the only Jane Doe's transaction is rejected since its amount 201 is greater than creditLimit = 200
   findRejectedTransactions(["Jane,Doe, jane@doe.com,199,TR0001", "Jane,Doe, jane@doe.com, 2, TR0002"], 200) returns [TR0002] as approving the second transaction would make the credit limit exceeded

Solution : TransactionProcessor.java